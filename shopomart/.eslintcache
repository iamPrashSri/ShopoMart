[{"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\index.js":"1","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\App.js":"2","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\DataLayerConfig\\Reducer.js":"3","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\reportWebVitals.js":"4","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\DataLayerConfig\\StateProvider.js":"5","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Login\\Login.js":"6","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Hosting\\Firebase.js":"7","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Header\\Header.js":"8","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Home\\Home.js":"9","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Checkout\\Checkout.js":"10","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Home\\Product\\Product.js":"11","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Checkout\\CheckoutProduct\\CheckoutProduct.js":"12","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Checkout\\SubTotal\\SubTotal.js":"13","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Payment\\Payment.js":"14","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\DataLayerConfig\\Axios.js":"15","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Orders\\Orders.js":"16","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Orders\\Order\\Order.js":"17"},{"size":721,"mtime":1607079055653,"results":"18","hashOfConfig":"19"},{"size":2095,"mtime":1607342001580,"results":"20","hashOfConfig":"19"},{"size":1327,"mtime":1607262541097,"results":"21","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"19"},{"size":494,"mtime":1607078038976,"results":"23","hashOfConfig":"19"},{"size":2560,"mtime":1607164362860,"results":"24","hashOfConfig":"19"},{"size":674,"mtime":1607157953273,"results":"25","hashOfConfig":"19"},{"size":2234,"mtime":1607278022706,"results":"26","hashOfConfig":"19"},{"size":3180,"mtime":1607008648339,"results":"27","hashOfConfig":"19"},{"size":2165,"mtime":1607363476025,"results":"28","hashOfConfig":"19"},{"size":1274,"mtime":1607364908972,"results":"29","hashOfConfig":"19"},{"size":1295,"mtime":1607277881479,"results":"30","hashOfConfig":"19"},{"size":1258,"mtime":1607177907352,"results":"31","hashOfConfig":"19"},{"size":6011,"mtime":1607351567639,"results":"32","hashOfConfig":"19"},{"size":198,"mtime":1607253240719,"results":"33","hashOfConfig":"19"},{"size":1701,"mtime":1607363202999,"results":"34","hashOfConfig":"19"},{"size":1368,"mtime":1607277729072,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"16zfnx9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\index.js",[],["77","78"],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\App.js",["79","80"],"import './App.css';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Checkout from './Checkout/Checkout';\nimport Login from './Login/Login';\nimport { useEffect } from 'react';\nimport { auth } from './Hosting/Firebase';\nimport { useStateValue } from './DataLayerConfig/StateProvider';\nimport Payment from './Payment/Payment';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Orders from './Orders/Orders';\n\nconst promise = loadStripe(\n  'pk_test_51Hv5opKowoFdwyoNtA5RcJyhbr8deSqKzaQIDOIBp81UmTMtueml1SSMVxUyKECf0tMFTdffaLh6UFctfddcFxaO00zGvkRqk1'\n);\n\nfunction App() {\n  // npm install -g firebase-tools\n  // Understand React Router (TO ADD MORE WEB PAGES TO THE APPLICATION)\n  \n  const [{}, dispatch] = useStateValue();\n\n  // Create a Listener - To keep a track of who is signed in\n  useEffect(() => {\n    // This will only run when the App component loads/reloads\n    auth.onAuthStateChanged((authUser) => {\n\n      if(authUser){\n        // The user just logged in / already logged in\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        });\n      } else {\n        // The user is logged out\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">        \n        <Switch>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>   {/* Higher Order function */}\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\DataLayerConfig\\Reducer.js",[],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\reportWebVitals.js",[],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\DataLayerConfig\\StateProvider.js",[],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Login\\Login.js",[],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Hosting\\Firebase.js",[],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Header\\Header.js",["81"],"import React from \"react\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"../DataLayerConfig/StateProvider\";\r\nimport { auth } from \"../Hosting/Firebase\";\r\n\r\nfunction Header() {\r\n\r\n  // Again Pull state\r\n  let [ {basket, user}, dispatch ] = useStateValue();\r\n\r\n  const handleAuthentication = () => {\r\n    // Once clicked, send back to login page\r\n    auth.signOut();\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\"> {/* TO create the image redirect to homepage */}\r\n        <img\r\n          className=\"header__logo\"\r\n          src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"\r\n          alt=\"\"\r\n        />\r\n      </Link>\r\n\r\n      <div className=\"header__search\">\r\n        <input type=\"text\" className=\"header__searchIn\" />\r\n        <SearchIcon  className=\"header__searchIcon\" />\r\n      </div>\r\n      <div className=\"header__nav\">\r\n        <Link to={ !user && \"/login\" }>\r\n          <div onClick={handleAuthentication} className=\"header__option\">\r\n            <span className=\"header__optionLineOne\">\r\n              {user ? user.email : 'Hello Guest'}\r\n            </span>\r\n\r\n            <span className=\"header__optionLineTwo\">{user ? 'Sign Out' : 'Sign In'}</span>\r\n          </div>\r\n        </Link>\r\n\r\n        <Link to=\"/orders\">\r\n          <div className=\"header__option\">\r\n            <span className=\"header__optionLineOne\">Returns</span>\r\n\r\n            <span className=\"header__optionLineTwo\">& Orders</span>\r\n          </div>\r\n        </Link>\r\n\r\n        <div className=\"header__option\">\r\n            <span className=\"header__optionLineOne\">Your</span>\r\n\r\n            <span className=\"header__optionLineTwo\">Prime</span>\r\n        </div>\r\n\r\n        <Link to=\"/checkout\">\r\n          <div className=\"header__optionBasket\">\r\n              <ShoppingBasketIcon />\r\n              <span className=\"header__optionLineTwo header__basketCount\">\r\n                {basket?.length}  {/* Optional Chaining in operators */}\r\n              </span>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Home\\Home.js",[],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Checkout\\Checkout.js",["82","83"],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Home\\Product\\Product.js",["84"],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Checkout\\CheckoutProduct\\CheckoutProduct.js",["85"],"import React from 'react';\r\nimport { useStateValue } from '../../DataLayerConfig/StateProvider';\r\nimport './CheckoutProduct.css';\r\n\r\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton}) {\r\n\r\n    let [{basket}, dispatch] = useStateValue();\r\n\r\n    const removeFromBasket = () => {\r\n        // Remove the item from the basket\r\n        dispatch({\r\n            type: 'REMOVE_FROM_BASKET',\r\n            id\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"checkoutProduct\">\r\n            <img className='checkoutProduct__image' src={image} alt=\"\"/>\r\n            \r\n            <div className=\"checkoutProduct__info\">\r\n                <p className=\"checkoutProduct__title\">{title}</p>\r\n                <p className=\"checkoutProduct__price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"checkoutProduct__rating\">\r\n                    {Array(rating).fill().map((_, i) => (\r\n                        <p>🌟</p>\r\n                    ))}\r\n                </div>\r\n                {!hideButton && (\r\n                    <button onClick={removeFromBasket}>Remove from Basket</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct;\r\n","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Checkout\\SubTotal\\SubTotal.js",["86"],"import React from 'react';\r\nimport './SubTotal.css';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from '../../DataLayerConfig/StateProvider';\r\nimport { getBasketTotal } from '../../DataLayerConfig/Reducer';\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction SubTotal() {\r\n\r\n    // Again basket from state\r\n    let [ {basket}, dispatch ] = useStateValue();\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className=\"subTotal\">\r\n            <CurrencyFormat\r\n                renderText={(value) => (\r\n                <>\r\n                    <p>\r\n                    Subtotal ({basket.length} items): <strong>{value}</strong>\r\n                    </p>\r\n                    <small className=\"subTotal__gift\">\r\n                    <input type=\"checkbox\" /> This order contains a gift\r\n                    </small>\r\n                </>\r\n                )}\r\n                decimalScale={2}\r\n                value={getBasketTotal(basket)}\r\n                displayType=\"text\"\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n            />\r\n\r\n            <button onClick={e => history.push('/payment')}>Proceed to checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubTotal;\r\n","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Payment\\Payment.js",["87"],"import React, { useEffect, useState } from 'react';\r\nimport CheckoutProduct from '../Checkout/CheckoutProduct/CheckoutProduct';\r\nimport { useStateValue } from '../DataLayerConfig/StateProvider';\r\nimport './Payment.css';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getBasketTotal } from '../DataLayerConfig/Reducer';\r\nimport Axios from '../DataLayerConfig/Axios';\r\nimport { db } from '../Hosting/Firebase';\r\n\r\nfunction Payment() {\r\n\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const history = useHistory();\r\n\r\n    let [error, setError] = useState(null);\r\n    let [disabled, setDisabled] = useState(true);\r\n    let [succeeded, setSucceeded] = useState(false);\r\n    let [processing, setProcessing] = useState(\"\");\r\n    let [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Generate the special stripe secret which allows us to charge customer\r\n        let getClientSecret = async () => {\r\n            let response = await Axios({\r\n                method: 'post',\r\n                // Stripe accepts the total in the currencies subunits (1$ = 100Cents)\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret);\r\n        };\r\n\r\n        getClientSecret();\r\n    }, [basket]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        let payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            // Payment intent is basically payment confirmation\r\n            \r\n            db.collection('users')\r\n                .doc(user?.uid)\r\n                .collection('orders')\r\n                .doc(paymentIntent.id)\r\n                .set({\r\n                    basket: basket,\r\n                    amount: paymentIntent.amount,\r\n                    created: paymentIntent.created\r\n                });\r\n\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            dispatch({\r\n                type: 'EMPTY_BASKET'\r\n            });\r\n\r\n            history.replace('/orders');    /* Throw user to Orders Page */\r\n            /* Used replace instead of push so that customer does not come back to this */\r\n            /* page after payment is done */\r\n        });\r\n    };\r\n    const handleChange = event => {\r\n        // Listen for changes in Card element\r\n        // And display any errors as the customer types the card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment__container\">\r\n                <h1>\r\n                    Checkout (\r\n                        <Link to=\"/checkout\">{basket?.length} items</Link>\r\n                    )\r\n                </h1>\r\n\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment__address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Lane</p>\r\n                        <p>Los Angeles, California</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className=\"payment_items\">\r\n                        {basket.map((checkoutProduct) => (\r\n                            <CheckoutProduct \r\n                                id={checkoutProduct.id}\r\n                                image={checkoutProduct.image}\r\n                                price={checkoutProduct.price}\r\n                                rating={checkoutProduct.rating}\r\n                                title={checkoutProduct.title}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange} />\r\n\r\n                            <div className=\"payment__priceContainer\">\r\n                                <CurrencyFormat\r\n                                    renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType=\"text\"\r\n                                    thousandSeparator={true}\r\n                                    prefix=\"$\"\r\n                                />\r\n                                <button\r\n                                    disabled={processing || disabled || succeeded}>\r\n                                    <span>\r\n                                        {processing ? <p>Processing</p> : <p>Buy Now</p>}\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* Error */}\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment;\r\n","G:\\Git Repositories\\ShopoMart\\shopomart\\src\\DataLayerConfig\\Axios.js",[],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Orders\\Orders.js",["88"],"G:\\Git Repositories\\ShopoMart\\shopomart\\src\\Orders\\Order\\Order.js",["89","90","91"],"import React from 'react';\r\nimport './Order.css';\r\nimport moment from \"moment\";\r\nimport CheckoutProduct from '../../Checkout/CheckoutProduct/CheckoutProduct';\r\nimport { useStateValue } from '../../DataLayerConfig/StateProvider';\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nfunction Order({order}) {\r\n\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"order\">\r\n            <h2>Order</h2>\r\n            <p>\r\n                {moment.unix(order.data.created).format(\"MMMM Do YYYY h:mma\")}\r\n            </p>\r\n            <p className=\"order__id\">\r\n                <small>{order.id}</small>\r\n            </p>\r\n            {order.data.basket?.map(item => (\r\n                <CheckoutProduct \r\n                    id={item.id}\r\n                    image={item.image}\r\n                    price={item.price}\r\n                    rating={item.rating}\r\n                    title={item.title}\r\n                    hideButton\r\n                />\r\n            ))}\r\n\r\n            <CurrencyFormat\r\n                renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                decimalScale={2}\r\n                value={order.data.amount / 100}\r\n                displayType=\"text\"\r\n                thousandSeparator={true}\r\n                prefix=\"$\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order;\r\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":23,"column":10,"nodeType":"98","messageId":"99","endLine":23,"endColumn":12},{"ruleId":"100","severity":1,"message":"101","line":44,"column":6,"nodeType":"102","endLine":44,"endColumn":8,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":12,"column":25,"nodeType":"106","messageId":"107","endLine":12,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":13,"column":27,"nodeType":"106","messageId":"107","endLine":13,"endColumn":35},{"ruleId":"100","severity":1,"message":"108","line":29,"column":8,"nodeType":"102","endLine":29,"endColumn":14,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"110","line":7,"column":10,"nodeType":"106","messageId":"107","endLine":7,"endColumn":15},{"ruleId":"104","severity":1,"message":"111","line":7,"column":11,"nodeType":"106","messageId":"107","endLine":7,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":10,"column":21,"nodeType":"106","messageId":"107","endLine":10,"endColumn":29},{"ruleId":"104","severity":1,"message":"112","line":43,"column":13,"nodeType":"106","messageId":"107","endLine":43,"endColumn":20},{"ruleId":"100","severity":1,"message":"108","line":42,"column":8,"nodeType":"102","endLine":42,"endColumn":14,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"111","line":10,"column":13,"nodeType":"106","messageId":"107","endLine":10,"endColumn":19},{"ruleId":"104","severity":1,"message":"114","line":10,"column":21,"nodeType":"106","messageId":"107","endLine":10,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":10,"column":28,"nodeType":"106","messageId":"107","endLine":10,"endColumn":36},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'MySwal' and 'history'. Either include them or remove the dependency array.",["118"],"'state' is assigned a value but never used.","'basket' is assigned a value but never used.","'payload' is assigned a value but never used.",["119"],"'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"122","fix":"124"},"Update the dependencies array to be: [dispatch]",{"range":"125","text":"126"},"Update the dependencies array to be: [MySwal, history, user]",{"range":"127","text":"128"},{"range":"129","text":"128"},[1378,1380],"[dispatch]",[995,1001],"[MySwal, history, user]",[1370,1376]]